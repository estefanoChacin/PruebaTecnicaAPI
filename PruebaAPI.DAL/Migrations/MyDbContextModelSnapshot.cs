// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaAPI.DAL.DBContext;

#nullable disable

namespace PruebaAPI.DAL.Migrations
{
    [DbContext(typeof(MyDbContext))]
    partial class MyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.8")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("PruebaAPI.MODEL.Category", b =>
                {
                    b.Property<int>("IdCategoria")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdCategoria"));

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdCategoria");

                    b.ToTable("Category");

                    b.HasData(
                        new
                        {
                            IdCategoria = 1,
                            Name = "Autos"
                        },
                        new
                        {
                            IdCategoria = 2,
                            Name = "Motocicletas"
                        });
                });

            modelBuilder.Entity("PruebaAPI.MODEL.Product", b =>
                {
                    b.Property<int>("IdProduct")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdProduct"));

                    b.Property<int?>("CategoriaIdCategoria")
                        .HasColumnType("int");

                    b.Property<DateTime>("DatedCreate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Description")
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<int>("IdCategoria")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(20,2)");

                    b.Property<int?>("Stock")
                        .HasColumnType("int");

                    b.HasKey("IdProduct");

                    b.HasIndex("CategoriaIdCategoria");

                    b.ToTable("Product");

                    b.HasData(
                        new
                        {
                            IdProduct = 1,
                            DatedCreate = new DateTime(2024, 9, 28, 18, 38, 51, 790, DateTimeKind.Local).AddTicks(3239),
                            Description = "De la linea deportiva",
                            IdCategoria = 2,
                            Name = "MT-15",
                            Price = 16000000m,
                            Stock = 2
                        },
                        new
                        {
                            IdProduct = 2,
                            DatedCreate = new DateTime(2024, 9, 28, 18, 38, 51, 790, DateTimeKind.Local).AddTicks(3245),
                            Description = "un auto de excelente gama",
                            IdCategoria = 1,
                            Name = "Mazda 3",
                            Price = 25000000m,
                            Stock = 2
                        });
                });

            modelBuilder.Entity("PruebaAPI.MODEL.Rol", b =>
                {
                    b.Property<int>("IdRol")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdRol"));

                    b.Property<DateTime>("datedCreate")
                        .HasMaxLength(200)
                        .HasColumnType("datetime(6)");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("IdRol");

                    b.ToTable("Rol");

                    b.HasData(
                        new
                        {
                            IdRol = 1,
                            datedCreate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "ADMIN"
                        },
                        new
                        {
                            IdRol = 2,
                            datedCreate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            name = "EMPLEADO"
                        });
                });

            modelBuilder.Entity("PruebaAPI.MODEL.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<int>("IdRol")
                        .HasColumnType("int");

                    b.Property<byte>("IsActive")
                        .HasColumnType("tinyint unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("varchar(500)");

                    b.HasKey("IdUser");

                    b.HasIndex("IdRol");

                    b.ToTable("User");

                    b.HasData(
                        new
                        {
                            IdUser = 1,
                            CreatedDate = new DateTime(2024, 9, 28, 18, 38, 51, 790, DateTimeKind.Local).AddTicks(3191),
                            Email = "alejrando@gmail.com",
                            IdRol = 1,
                            IsActive = (byte)1,
                            Name = "alejandro",
                            Password = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"
                        },
                        new
                        {
                            IdUser = 2,
                            CreatedDate = new DateTime(2024, 9, 28, 18, 38, 51, 790, DateTimeKind.Local).AddTicks(3205),
                            Email = "miguel@gmail.com",
                            IdRol = 2,
                            IsActive = (byte)1,
                            Name = "miguel",
                            Password = "5994471abb01112afcc18159f6cc74b4f511b99806da59b3caf5a9c173cacfc5"
                        });
                });

            modelBuilder.Entity("PruebaAPI.MODEL.Product", b =>
                {
                    b.HasOne("PruebaAPI.MODEL.Category", "Categoria")
                        .WithMany()
                        .HasForeignKey("CategoriaIdCategoria");

                    b.Navigation("Categoria");
                });

            modelBuilder.Entity("PruebaAPI.MODEL.User", b =>
                {
                    b.HasOne("PruebaAPI.MODEL.Rol", "Rol")
                        .WithMany("users")
                        .HasForeignKey("IdRol")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Rol");
                });

            modelBuilder.Entity("PruebaAPI.MODEL.Rol", b =>
                {
                    b.Navigation("users");
                });
#pragma warning restore 612, 618
        }
    }
}
